# List of dictionaries example
---
# A pre-declared list of dictionaries.  Each element is a dictionary
# with a 'question' and 'answer' key.  The 'question' value is pre-populated
variable name: MJFqalist
use objects: True
data:
  - question: "What is your name?"
    answer: ""
  - question: "What is your address?"
    answer: ""
  - question: "How are you feeling today?"
    answer: ""
  - question: "Tell me about the last time you flew an aeroplane"
    answer: ""
---
# In our examples to date, we have a mandatory question block which drives
# the interview.  That won't work in this case as we have pre-declared 
# MJFqalist and put values in each entry.  The mandatory question block would
# not populate any answers as all the answers are already populated.
#
# Instead, we run this mandatory code block.  It iterates through MJFqalist and
# looks for an entry called 'asked'.  The key 'asked' is not defined in our 
# 'variable name' declaration.  Instead it's added dynamically in the question block.
# That means that no item in MJFqalist has an 'asked' key until the question is 
# asked.
#
# See the question block for how we set MJFqalist['asked']
mandatory: True
code: |
  for MJFitem in MJFqalist:
    MJFitem['asked']
---
# Mandatory block displays output
mandatory: True
question: List of Questions and Answers
subquestion: |
  Question|Answer
  ---|----
  % for MJFitem in MJFqalist:
  ${ MJFitem['question'] } | ${ MJFitem['answer'] }
  % endfor
buttons:
  - Exit: exit
  - Restart: restart
---
# This question block does two things:
# 1. It populates MJFqalist[i]['answer'] as we would expect
# 2. It also sets MJFqalist[i]['asked'] to True when we press
#    the continue button.
# We can then use the 'asked' key to determine whether this question
# has been asked or not.
question: |
  ${ MJFqalist[i]['question'] }
fields:
  - Answer:   MJFqalist[i]['answer']
continue button field: MJFqalist[i]['asked']
---